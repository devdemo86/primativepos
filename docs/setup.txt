Setup Documentation for Primitive Point of Sale

Copyright 2011-13 Jeremy N. House 
jer.house@gmail.com

Released under the GNU General Public License
================================================================================


This Document explains the setup process for the POS.  You will need 
the following software to be installed:


Web Server
PHP 5.0 or later
Mysql 5.0 or later
TCPDF (for printing invoices)
Zip utility.  7-zip is what the commands in the batch files are using, but you will need to install the 
	program or an alternate


--------------------------------------------------------------------------------

Purpose:

I built this system for my father's hardware store.  It is a very small business, 
so the system is quite minimal.  It is single user based and may require a lot of
tweaking to fit your needs.

I'm hoping someone can make use of this 
program.  I'm open to feedback and should be available 
if you have any questions on installing or anything else.

--------------------------------------------------------------------------------

Features:

* Product Catalog  ---  simple add/edit functionality in the GUI
* Customer Database --- simple add/edit and customer jobs list
* Point of Sale	    --- stores items/qty/price in cart
						add/remove/increment item in cart
						computes total/tax/discount/price-override
						pause/resume transaction
						tax exempt/resale/returns
						pay options: cash/check/cc/account
		

* Simple accounting and statement generation
* Printing to a Dymo label printer or regular office printer
* Receive payments on account
* Jquery/Jquery-ui and several open source helper apps:

	* jquery.notify.min.js  -- Eric Hynds
  	* jquery.tooltip.min.js -- Jï¿½rn Zaefferer
        * vscontext.jquery.js   -- Intekhab A Rizvi

    - Stateless design, no page loads (all ajax/jquery)


Missing Features:

* No easy setup:  tweaking of paths needed
* No cash drawer functionality
* Single user: only one terminal location should be used since 
  there are not sufficient measures in place to ensure multiple 
  terminals don't alter the same data
* Limited documentation
* Printing may require additional software or customizing the print templates.  It is 
  designed to print receipts on a Dymo label printer

--------------------------------------------------------------------------------

--Normal Installation--

--------------------------------------------------------------------------------
Installing the server applications:

This software is comprised of PHP scripts and HTML documents with javascript/jquery code.  Because 
of this, you have to setup several programs:  web server, database server, PHP interpreter

If you are unfamiliar with setting up MySQL, PHP, and a web server (Apache or IIS), the easiest 
way to install the necessary programs if using Windows would be to install the WAMP package 
from http://www.wampserver.com/ .  This will install all of the programs needed 
rather than having to download PHP, MySQL, and Apache individually


--------------------------------------------------------------------------------
Setting up the Database:

The database server stores all of the data for the POS.  Make sure the 'root' password is set.  

Type the command: mysqladmin -u root password NEWPASSWORD
On intial install of the program, there is no password, so when prompted just hit enter

If you want to change the default user/password that the scripts will use to operate on the database, or the name
of the database (default is pos), then you'll have to edit docs/mysql_install.sql.

To setup the database structure for the POS, change to the documentation 
directory where this help file is located and execute the command:

	mysql -u root -p < mysql_install.sql

	This will install the datase 'pos' and all of the tables and setup the default passwords.  These passwords 
	are set in config/options.cfg.php.

	The admin password, which is used for changing prices and catalog info is
	set in the install script and db.php as admin314.  To change it, log into mysql, and 
	issue the command:

	UPDATE pos.users SET password='newpassword' WHERE name='admin';


--------------------------------------------------------------------------------

Printing:

Obtain the TCPDF package and make sure it is in your PHP include path.  TCPDF is 
used to generate invoices and reports.  Receipts are printed as plain text to the 
printer.

--------------------------------------------------------------------------------

Database Backups:

The system will backup the database to an FTP site during the closing procedures.  
To run a periodic backup, set backups/periodic.bat to be run by the scheduler 
at a certain interval. 
---------------------------------------------------------------------------------

To install the code from this package, it must be placed where the web server is configured to 
serve documents.  Here are the files from this package that need to be altered:


config/options.cfg.php -- Contains the username/password/host/database for establishing the MySQL connection
			  Contains the sales tax rate, company information, and other options.  The POS should 
			  run with the default values given.  You will need to change sales tax and company info 
			  for sure.



shutdown.bat      -- Set the proper paths
		     Remove "REM" from beginning to enable this file to run



config/ftp.cfg.php   -- FTP authentication variables and tmp directories for the backups
			Timeout for running the PHP script
			Upload speed of your connection for progress bar estimation

backups/quick_backup.bat  -- Set the proper paths, which is the last
			     argument on the last line.  Set the backup 
			     user in line 1 if different than example from instructions.
							 
backups/backup.bat        -- Set the proper paths, which is the last 
				 argument on the last line.  Set mysql password and backup user 
				 in line 1 if necessary.

backups/periodic.bat	  -- Set the path to the PHP interpreter


--------------------------------------------------------------------------------

Importing Customers:

Assuming your customer data is in a spreadsheet format, you will need to create columns corresponding 
to the fields of the database.  You will save the data as a CSV (comma delimited) file.  Order 
the columns as done in etc/example.csv.  Most fields should be self-explanatory.  The `use_company` 
field is used to designate whether to use the company or the `last_name/first_name` field of the 
record.  The fields `use_company`, `credit`, `tax_exempt`, and `active` are all binary (1 or 0) fields.  
The `credit` field designates whether to allow the customer to charge on the in-store account.  You 
may leave any field blank except the binary fields.


To import into the database, login to mysql:

mysql -u root -p

Issue the command:

LOAD DATA LOCAL INFILE 'c:/wamp/www/primativepos/etc/example.csv' INTO TABLE pos.customers FIELDS TERMINATED BY ',' LINES TERMINATED BY '\r\n' (company, last_name, first_name, mi, address, city, state, zip, phone, phone_ext, credit, tax_exempt, active, use_company);

You can change the order of the fields in the above statement if you ordered the columns in your 
spreadsheet differently.  You may also need to change '\r\n' to '\n' if you're using Linux/OSX.  If 
using a tab-delimited import file, change the above ',' to '\t' to indicate tabs.  There are also other options for parsing 
the input.

--------------------------------------------------------------------------------

Importing Catalog Items:

This is the same procedure as for customers.  Here is an explanation of the columns:

id:  primary key that is automatically incremented when a new row is added to the database table.  You don't alter this or reference it
barcode:  numeric ID incremented on each add to the catalog from within the POS.  Used to search for or scan items.
name:  item name
dept_id:  not used, but may be eventually used as a catagory
vendor_name:  manufacturer name of the item
product_id:  UPC number which is searchable/scannable in the POS
manufacturer_id:  manufacturer's ID for the item
vendor_id:  not  used
price:  item price
qty:  quantity of item on hand.  Will be decreminted when item is sold
override_price:  will be flagged when changing an item's price to indicate not to update it 
				 if you do a future catalog update

Example import statement:

LOAD DATA LOCAL INFILE 'catalog.csv' INTO TABLE catalog FIELDS TERMINATED BY ',' LINES TERMINATED BY '\r\n' (barcode, name, dept_id, vendor_name, product_id, manufacturer_id, vendor_id, price, qty, override_price);

--------------------------------------------------------------------------------

Known Bugs:


You should test this system for a lengthy period of time to be 
sure all functions work properly.

-the auto_decimal function may be quirky, especially if editing using the mouse

-Display needs 1280px or wider width, otherwise items may 
 wrap over the screen.  Adjust the font size in the browser to make it fit.

-If middle initials are NULL in the database, the query that populates the customer 
list will pull up null values...not sure why.  Just make sure middle initials are 
set to '' or that they are not null.
--------------------------------------------------------------------------------

Clip Art icons are from Open Clip Art Library:  http://www.openclipart.org/

Menu icons:

customers: 
jobs:      
billing: 
catalog:   Ypssun
payments:  
shutdown:  

other icons:
      
add:       
freight:   
discount:  
close:    
delete: 
search: 
labor: valessiobrito
print: warszawianka
view statement: jhnri4
chart: rg1024
